// Code generated by protoc-gen-go. DO NOT EDIT.
// source: contract.proto

package main

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type PublicKey struct {
	Key                  string   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PublicKey) Reset()         { *m = PublicKey{} }
func (m *PublicKey) String() string { return proto.CompactTextString(m) }
func (*PublicKey) ProtoMessage()    {}
func (*PublicKey) Descriptor() ([]byte, []int) {
	return fileDescriptor_d19debeba7dea55a, []int{0}
}

func (m *PublicKey) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PublicKey.Unmarshal(m, b)
}
func (m *PublicKey) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PublicKey.Marshal(b, m, deterministic)
}
func (m *PublicKey) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PublicKey.Merge(m, src)
}
func (m *PublicKey) XXX_Size() int {
	return xxx_messageInfo_PublicKey.Size(m)
}
func (m *PublicKey) XXX_DiscardUnknown() {
	xxx_messageInfo_PublicKey.DiscardUnknown(m)
}

var xxx_messageInfo_PublicKey proto.InternalMessageInfo

func (m *PublicKey) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

type Hash struct {
	Hash                 string   `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Hash) Reset()         { *m = Hash{} }
func (m *Hash) String() string { return proto.CompactTextString(m) }
func (*Hash) ProtoMessage()    {}
func (*Hash) Descriptor() ([]byte, []int) {
	return fileDescriptor_d19debeba7dea55a, []int{1}
}

func (m *Hash) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Hash.Unmarshal(m, b)
}
func (m *Hash) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Hash.Marshal(b, m, deterministic)
}
func (m *Hash) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Hash.Merge(m, src)
}
func (m *Hash) XXX_Size() int {
	return xxx_messageInfo_Hash.Size(m)
}
func (m *Hash) XXX_DiscardUnknown() {
	xxx_messageInfo_Hash.DiscardUnknown(m)
}

var xxx_messageInfo_Hash proto.InternalMessageInfo

func (m *Hash) GetHash() string {
	if m != nil {
		return m.Hash
	}
	return ""
}

type Contract struct {
	Id                   *Contract_ID         `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Owner                *PublicKey           `protobuf:"bytes,2,opt,name=Owner,proto3" json:"Owner,omitempty"`
	Duration             int64                `protobuf:"varint,3,opt,name=Duration,proto3" json:"Duration,omitempty"`
	BillingPeriod        int64                `protobuf:"varint,4,opt,name=BillingPeriod,proto3" json:"BillingPeriod,omitempty"`
	BillingPrice         int64                `protobuf:"varint,5,opt,name=BillingPrice,proto3" json:"BillingPrice,omitempty"`
	Replicators          []*PublicKey         `protobuf:"bytes,6,rep,name=Replicators,proto3" json:"Replicators,omitempty"`
	Files                []*Hash              `protobuf:"bytes,7,rep,name=Files,proto3" json:"Files,omitempty"`
	Created              *timestamp.Timestamp `protobuf:"bytes,8,opt,name=Created,proto3" json:"Created,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Contract) Reset()         { *m = Contract{} }
func (m *Contract) String() string { return proto.CompactTextString(m) }
func (*Contract) ProtoMessage()    {}
func (*Contract) Descriptor() ([]byte, []int) {
	return fileDescriptor_d19debeba7dea55a, []int{2}
}

func (m *Contract) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Contract.Unmarshal(m, b)
}
func (m *Contract) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Contract.Marshal(b, m, deterministic)
}
func (m *Contract) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Contract.Merge(m, src)
}
func (m *Contract) XXX_Size() int {
	return xxx_messageInfo_Contract.Size(m)
}
func (m *Contract) XXX_DiscardUnknown() {
	xxx_messageInfo_Contract.DiscardUnknown(m)
}

var xxx_messageInfo_Contract proto.InternalMessageInfo

func (m *Contract) GetId() *Contract_ID {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Contract) GetOwner() *PublicKey {
	if m != nil {
		return m.Owner
	}
	return nil
}

func (m *Contract) GetDuration() int64 {
	if m != nil {
		return m.Duration
	}
	return 0
}

func (m *Contract) GetBillingPeriod() int64 {
	if m != nil {
		return m.BillingPeriod
	}
	return 0
}

func (m *Contract) GetBillingPrice() int64 {
	if m != nil {
		return m.BillingPrice
	}
	return 0
}

func (m *Contract) GetReplicators() []*PublicKey {
	if m != nil {
		return m.Replicators
	}
	return nil
}

func (m *Contract) GetFiles() []*Hash {
	if m != nil {
		return m.Files
	}
	return nil
}

func (m *Contract) GetCreated() *timestamp.Timestamp {
	if m != nil {
		return m.Created
	}
	return nil
}

type Contract_ID struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Contract_ID) Reset()         { *m = Contract_ID{} }
func (m *Contract_ID) String() string { return proto.CompactTextString(m) }
func (*Contract_ID) ProtoMessage()    {}
func (*Contract_ID) Descriptor() ([]byte, []int) {
	return fileDescriptor_d19debeba7dea55a, []int{2, 0}
}

func (m *Contract_ID) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Contract_ID.Unmarshal(m, b)
}
func (m *Contract_ID) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Contract_ID.Marshal(b, m, deterministic)
}
func (m *Contract_ID) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Contract_ID.Merge(m, src)
}
func (m *Contract_ID) XXX_Size() int {
	return xxx_messageInfo_Contract_ID.Size(m)
}
func (m *Contract_ID) XXX_DiscardUnknown() {
	xxx_messageInfo_Contract_ID.DiscardUnknown(m)
}

var xxx_messageInfo_Contract_ID proto.InternalMessageInfo

func (m *Contract_ID) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func init() {
	proto.RegisterType((*PublicKey)(nil), "main.PublicKey")
	proto.RegisterType((*Hash)(nil), "main.Hash")
	proto.RegisterType((*Contract)(nil), "main.Contract")
	proto.RegisterType((*Contract_ID)(nil), "main.Contract.ID")
}

func init() { proto.RegisterFile("contract.proto", fileDescriptor_d19debeba7dea55a) }

var fileDescriptor_d19debeba7dea55a = []byte{
	// 306 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x6c, 0x90, 0xdd, 0x4a, 0xfb, 0x30,
	0x18, 0xc6, 0x59, 0xdb, 0x7d, 0xbd, 0xfb, 0xff, 0xa7, 0xbe, 0x78, 0x10, 0x0a, 0xe2, 0x2c, 0x0a,
	0x1e, 0x65, 0xf8, 0x71, 0x05, 0x6e, 0x88, 0xc3, 0x03, 0x47, 0xf0, 0x06, 0xb2, 0x2e, 0x76, 0xc1,
	0xb6, 0x29, 0x69, 0x8a, 0xec, 0x5a, 0xbd, 0x19, 0xdb, 0x64, 0x2d, 0x0e, 0x3c, 0xca, 0x9b, 0xe7,
	0xf9, 0x85, 0x27, 0xef, 0x03, 0xd3, 0x58, 0xe5, 0x46, 0xf3, 0xd8, 0xd0, 0x42, 0x2b, 0xa3, 0x30,
	0xc8, 0xb8, 0xcc, 0xc3, 0xcb, 0x44, 0xa9, 0x24, 0x15, 0x73, 0xab, 0x6d, 0xaa, 0x8f, 0xb9, 0x91,
	0x99, 0x28, 0x0d, 0xcf, 0x0a, 0x87, 0x45, 0x17, 0x30, 0x5e, 0x57, 0x9b, 0x54, 0xc6, 0xaf, 0x62,
	0x8f, 0xa7, 0xe0, 0x7f, 0x8a, 0x3d, 0xe9, 0xcd, 0x7a, 0xb7, 0x63, 0xd6, 0x8c, 0x51, 0x08, 0xc1,
	0x0b, 0x2f, 0x77, 0x88, 0x10, 0xec, 0xea, 0xf3, 0x60, 0xd9, 0x39, 0xfa, 0xf6, 0x60, 0xb4, 0x38,
	0x84, 0xe2, 0x15, 0x78, 0x72, 0x6b, 0xed, 0xc9, 0xfd, 0x19, 0x6d, 0xb2, 0x69, 0xeb, 0xd1, 0xd5,
	0x92, 0xd5, 0x26, 0xde, 0x40, 0xff, 0xed, 0x2b, 0x17, 0x9a, 0x78, 0x96, 0x3a, 0x71, 0x54, 0x97,
	0xce, 0x9c, 0x8b, 0x21, 0x8c, 0x96, 0x95, 0xe6, 0x46, 0xaa, 0x9c, 0xf8, 0x35, 0xe9, 0xb3, 0xee,
	0x8e, 0xd7, 0xf0, 0xff, 0x49, 0xa6, 0xa9, 0xcc, 0x93, 0xb5, 0xd0, 0x52, 0x6d, 0x49, 0x60, 0x81,
	0x63, 0x11, 0x23, 0xf8, 0xd7, 0x0a, 0x5a, 0xc6, 0x82, 0xf4, 0x2d, 0x74, 0xa4, 0xe1, 0x1d, 0x4c,
	0x98, 0x28, 0xea, 0x64, 0x6e, 0x94, 0x2e, 0xc9, 0x60, 0xe6, 0xff, 0xf5, 0xa5, 0xdf, 0x0c, 0xce,
	0xa0, 0xff, 0x2c, 0x53, 0x51, 0x92, 0xa1, 0x85, 0xc1, 0xc1, 0x4d, 0x3d, 0xcc, 0x19, 0xf8, 0x08,
	0xc3, 0x85, 0x16, 0xdc, 0x88, 0x2d, 0x19, 0xd9, 0x1d, 0x43, 0xea, 0xfa, 0xa7, 0x6d, 0xff, 0xf4,
	0xbd, 0xed, 0x9f, 0xb5, 0x68, 0x78, 0x0e, 0xde, 0x6a, 0x89, 0xd3, 0xae, 0xc0, 0x71, 0xd3, 0xd6,
	0x66, 0x60, 0x9f, 0x3c, 0xfc, 0x04, 0x00, 0x00, 0xff, 0xff, 0x82, 0xda, 0x46, 0xe3, 0xd8, 0x01,
	0x00, 0x00,
}
